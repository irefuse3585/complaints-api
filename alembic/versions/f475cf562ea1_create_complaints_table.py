# mypy: ignore-errors

"""Create complaints table

Revision ID: f475cf562ea1
Revises:
Create Date: 2025-07-10 02:48:14.048612

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f475cf562ea1"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "complaints",
        sa.Column(
            "id",
            sa.Integer(),
            nullable=False,
            comment="Primary key: unique complaint ID",
        ),
        sa.Column(
            "text",
            sa.String(),
            nullable=False,
            comment="Complaint text provided by the user",
        ),
        sa.Column(
            "status",
            sa.Enum("OPEN", "CLOSED", name="statusenum"),
            nullable=False,
            comment="Complaint status: open or closed",
        ),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Timestamp when this record was created",
        ),
        sa.Column(
            "sentiment",
            sa.Enum("POSITIVE", "NEGATIVE", "NEUTRAL", "UNKNOWN", name="sentimentenum"),
            nullable=False,
            comment="Sentiment analysis outcome: positive, negative, neutral, or unknown",
        ),
        sa.Column(
            "category",
            sa.Enum("TECHNICAL", "PAYMENT", "OTHER", name="categoryenum"),
            nullable=False,
            comment="Complaint category: technical, payment, or other",
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Table of customer complaints with sentiment and category metadata",
    )
    op.create_index(op.f("ix_complaints_id"), "complaints", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_complaints_id"), table_name="complaints")
    op.drop_table("complaints")
    # ### end Alembic commands ###
