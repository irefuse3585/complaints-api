# flake8: noqa
# mypy: ignore-errors

"""
src/main.py

Application entrypoint: creates FastAPI app, includes routers,
and configures metadata for autogenerated OpenAPI documentation.
"""

import logging
from contextlib import asynccontextmanager

from fastapi import FastAPI

from .config import settings
from .core.logging import setup_logging
from .routers.complaints import router as complaints_router

setup_logging(settings.log_level)
logger = logging.getLogger(__name__)


@asynccontextmanager
async def lifespan(app: FastAPI):
    logger.info(
        "Application startup: log_level=%s",
        settings.log_level,
    )
    yield
    logger.info("Application shutdown.")


def create_app() -> FastAPI:
    """
    Construct and configure the FastAPI application.

    - Sets title, version, and description for the OpenAPI docs.
    - Includes all API routers.
    """
    app = FastAPI(
        title="Complaint Processing API",
        version="1.0.0",
        description="API for submitting customer complaints with sentiment analysis and categorization.",
        docs_url="/docs",  # Swagger UI
        redoc_url="/redoc",  # ReDoc
        openapi_url="/openapi.json",  # Spec
        lifespan=lifespan,
    )
    app.include_router(complaints_router)
    return app


# Actual app instance for Uvicorn or other ASGI servers to run
app = create_app()
